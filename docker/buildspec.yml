version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: eu-north-1
    ECR_REPO: 085494094875.dkr.ecr.eu-north-1.amazonaws.com/docker-registry
    PROJECT_DIR: docker
    CONTAINER_NAME: docker-registry   # MUST match container name in ECS task def

phases:
  install:
    commands:
      - echo "Starting build in CodeBuild image"
      - mvn -v || true

  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region "$AWS_DEFAULT_REGION" | docker login --username AWS --password-stdin "$ECR_REPO"
      - COMMIT_SHA=$(echo "${CODEBUILD_RESOLVED_SOURCE_VERSION:-}" | cut -c1-7 || true)
      - IMAGE_TAG=${COMMIT_SHA:-latest}
      - echo "IMAGE_TAG=$IMAGE_TAG"

  build:
    commands:
      - echo "Build app JAR"
      - cd "$PROJECT_DIR"
      - mvn -q -DskipTests clean package
      - echo "Build Docker image"
      - docker build -t "$ECR_REPO:$IMAGE_TAG" .
      - docker tag  "$ECR_REPO:$IMAGE_TAG" "$ECR_REPO:latest"

  post_build:
    commands:
      - echo "Push image(s)"
      - docker push "$ECR_REPO:$IMAGE_TAG"
      - docker push "$ECR_REPO:latest"
      # IMPORTANT: return to SOURCE ROOT before writing imagedefinitions.json
      - cd "$CODEBUILD_SRC_DIR"
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$ECR_REPO:$IMAGE_TAG" > imagedefinitions.json
      - echo "imagedefinitions.json content:"
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    # (optional) keep jar too
    - docker/target/*.jar
  discard-paths: yes        # <â€” forces files to be at the ZIP root for ECS
